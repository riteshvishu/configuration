<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <ListViewPanel
    id="ScheduleRateLV">
    <Require
      name="credit"
      type="Modifier"/>
    <RowIterator
      editable="true"
      elementName="rateFactor"
      value="credit.RateFactors">
      <IteratorSort
        sortBy="rateFactor.Pattern.Priority"
        sortOrder="1"/>
      <Row>
        <Cell
          footerLabel="displaykey.Web.Policy.RatingInputs.Overall"
          id="Category"
          label="displaykey.Web.Policy.RatingInputs.Category"
          value="rateFactor.Pattern.Name"
          width="400"
          wrap="true"/>
        <Cell
          footerLabel="credit.Minimum as String"
          id="Minimum"
          label="displaykey.Web.Policy.RatingInputs.Minimum"
          value="rateFactor.Minimum"
          visible="credit.Pattern.DisplayRange"/>
        <Cell
          footerLabel="credit.Maximum as String"
          id="Maximum"
          label="displaykey.Web.Policy.RatingInputs.Maximum"
          value="rateFactor.Maximum"
          visible="credit.Pattern.DisplayRange"/>
        <TextCell
          editable="true"
          footerLabel="credit.RateModifier as String"
          id="CreditDebit"
          label="displaykey.Web.Policy.RatingInputs.CreditDebit"
          numCols="5"
          requestValidationExpression="checkValueRanges(rateFactor, VALUE)"
          value="rateFactor.AssessmentWithinLimits">
          <PostOnChange/>
        </TextCell>
        <TextCell
          editable="rateFactor.Pattern.ModifierPattern.DisplayJustification"
          id="Justification"
          label="displaykey.Web.Policy.RatingInputs.Justification"
          numCols="45"
          validationExpression="verifyRateFactor(rateFactor)"
          value="rateFactor.Justification"
          visible="credit.Pattern.DisplayJustification"/>
      </Row>
    </RowIterator>
    <Code><![CDATA[
function verifyRateFactor(rate : RateFactor): String {
  if (rate.Assessment != 0 and rate.Justification == null) {
    return displaykey.Web.RatingFactors.JustificationNeeded
  }
  return null
}

function checkValueRanges(rate : RateFactor, value : java.math.BigDecimal) : String {
  if (!rate.isValueWithinRange( value as String )) {
    return displaykey.Web.Policy.RateFactor.OutOfRange( value, rate.Minimum, rate.Maximum )
  }
  return null
}
    ]]></Code>
  </ListViewPanel>
</PCF>
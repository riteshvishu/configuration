<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <InputSet
    id="WC7ClassesInputSet">
    <Require
      name="jurisdiction"
      type="WC7Jurisdiction"/>
    <Require
      name="wc7Line"
      type="WC7WorkersCompLine"/>
    <Variable
      initialValue="wc7Line.Branch.Job.NewTerm"
      name="isNewTerm"/>
    <Variable
      initialValue="jurisdiction.SplitDates"
      name="splitDates"
      recalculateOnRefresh="true"/>
    <ListViewInput
      editable="true"
      labelAbove="true">
      <Toolbar>
        <IteratorButtons
          addLabel="displaykey.Web.Policy.WC.AddClass"
          addShortcut="l"
          iterator="EmployeeVersionList"/>
      </Toolbar>
      <ListViewPanel
        id="WCCovEmpLV">
        <RowIterator
          autoAdd="false"
          editable="true"
          elementName="wcEmployee"
          hasCheckBoxes="true"
          hideCheckBoxesIfReadOnly="true"
          id="EmployeeVersionList"
          numEntriesRequired="0"
          numEntriesToAdd="1"
          toCreateAndAdd="wc7Line.addCoveredEmployeeWM(gw.api.util.StateJurisdictionMappingUtil.getStateMappingForJurisdiction(jurisdiction.Jurisdiction))"
          toRemove="wcEmployee.removeWM()"
          validationLabel="displaykey.Web.Policy.WC.CovEmp"
          value="wc7Line.getWC7CoveredEmployeesWM(jurisdiction.Jurisdiction)">
          <Variable
            initialValue="isNewTerm ? null : wcEmployee.BasedOn.ClassCode"
            name="previousWC7ClassCode"/>
          <Variable
            initialValue="gw.pcf.WC7ClassesInputSetUIHelper.getClassCodeShortDescriptions(wcEmployee, wcEmployee.LocationWM, previousWC7ClassCode)"
            name="classCodeShortDescriptions"
            recalculateOnRefresh="true"/>
          <Row>
            <Cell
              enableSort="false"
              id="Period1"
              label="displaykey.Web.Policy.WC.PeriodHeader"
              value="gw.pcf.WC7ClassesInputSetUIHelper.getPeriodNumbers(wcEmployee, splitDates)"
              visible="splitDates.Count &gt; 2">
              <PostOnChange/>
            </Cell>
            <RangeCell
              align="left"
              editable="true"
              id="WC7SpecialCoverage"
              label="displaykey.Web.Policy.WC.CovEmp.SpecialCoverage"
              required="true"
              value="wcEmployee.GoverningLaw"
              valueRange="jurisdiction.getPossibleGoverningLaws()"
              width="200">
              <PostOnChange
                onChange="wcEmployee.ClassCode = gw.pcf.WC7ClassesInputSetUIHelper.findFirstMatchingClassCode(wcEmployee.ClassCode.Code, wcEmployee, previousWC7ClassCode)"/>
            </RangeCell>
            <RangeCell
              align="left"
              editable="wcEmployee.canEditLocation(splitDates)"
              id="Loc"
              label="displaykey.Web.Policy.WC.CovEmp.Loc"
              required="true"
              sortOrder="1"
              value="wcEmployee.LocationWM"
              valueRange="wc7Line.Branch.getPolicyLocationWM(gw.api.util.StateJurisdictionMappingUtil.getStateMappingForJurisdiction(jurisdiction.Jurisdiction))"
              width="150"/>
            <PickerCell
              available="wcEmployee.LocationWM != null"
              editable="true"
              id="ClassCode"
              inputConversion="gw.pcf.WC7ClassesInputSetUIHelper.findFirstMatchingClassCode(VALUE, wcEmployee, previousWC7ClassCode)"
              label="displaykey.Web.Policy.WC.CovEmp.ClassCode"
              numCols="6"
              onPick="gw.pcf.WC7ClassesInputSetUIHelper.clearupRates(wcEmployee)"
              outputConversion="VALUE == null ? &quot;&quot; : VALUE.Code"
              pickLocation="WC7ClassCodeSearchPopup.push(wcEmployee.LocationWM, wc7Line, previousWC7ClassCode, gw.pcf.WC7ClassesInputSetUIHelper.getExcludedClassCodeTypes(wcEmployee.GoverningLaw))"
              required="true"
              sortOrder="2"
              value="wcEmployee.ClassCode">
              <Reflect
                available="VALUE.State != null"
                triggerIds="Loc"/>
              <PostOnChange
                onChange="gw.pcf.WC7ClassesInputSetUIHelper.clearupRates(wcEmployee); if (wcEmployee.ClassCode == null) classCodeShortDescriptions = {}"/>
            </PickerCell>
            <RangeCell
              align="left"
              editable="classCodeShortDescriptions.length &gt; 1"
              id="Description"
              label="displaykey.Web.Policy.WC.CovEmp.Description"
              required="true"
              value="wcEmployee.ClassCodeShortDescription"
              valueRange="classCodeShortDescriptions"
              width="250"/>
            <TextCell
              align="right"
              editable="true"
              id="NumEmployees"
              label="displaykey.Web.Policy.WC.CovEmp.NumEmployees"
              numCols="8"
              value="wcEmployee.NumEmployees"/>
            <CheckBoxCell
              editable="true"
              id="IfAnyExposure"
              label="displaykey.Web.Policy.WC.CovEmp.IfAnyExposure"
              value="wcEmployee.IfAnyExposureAndClearBasisAmount">
              <PostOnChange/>
            </CheckBoxCell>
            <TextCell
              align="right"
              available="!wcEmployee.IfAnyExposureAndClearBasisAmount"
              editable="true"
              enableSort="false"
              id="AnnualRenum"
              label="displaykey.Web.Policy.WC.CovEmp.AnnualRenum"
              numCols="8"
              required="true"
              value="wcEmployee.BasisAmount"
              valueVisible="!wcEmployee.IfAnyExposureAndClearBasisAmount"/>
            <TextCell
              align="right"
              available="!wcEmployee.IfAnyExposureAndClearBasisAmount"
              enableSort="false"
              id="BasisType"
              label="displaykey.Web.Policy.WC.CovEmp.BasisType"
              numCols="8"
              required="true"
              value="wcEmployee.ClassCodeBasisDescription"
              valueVisible="!wcEmployee.IfAnyExposureAndClearBasisAmount"/>
            <TextCell
              editable="true"
              id="Rate"
              label="displaykey.Web.Policy.WC.CovEmp.Rate"
              numCols="8"
              required="true"
              value="wcEmployee.Rate"
              valueVisible="wcEmployee.ClassCode.ARatedType"
              visible="gw.pcf.WC7ClassesInputSetUIHelper.isRateColumnVisible(jurisdiction)"/>
            <CheckBoxCell
              editable="true"
              enableSort="false"
              id="SpecificDiseaseLoaded"
              label="displaykey.Web.Policy.WC.CovEmp.SpecificDiseaseLoaded"
              value="wcEmployee.SpecificDiseaseLoaded"
              valueVisible="wcEmployee.ClassCode.DiseaseType"
              visible="gw.pcf.WC7ClassesInputSetUIHelper.isSpecificDiseaseColumnVisible(jurisdiction)"
              wrapLabel="true"/>
            <CheckBoxCell
              editable="true"
              enableSort="false"
              id="SupplementalDiseaseLoaded"
              label="displaykey.Web.Policy.WC.CovEmp.SupplementalDiseaseLoaded"
              value="wcEmployee.SupplementalDiseaseLoaded"
              wrapLabel="true">
              <PostOnChange
                onChange="wcEmployee.SupplementalDiseaseLoadingRate = null"/>
            </CheckBoxCell>
            <TextCell
              editable="true"
              enableSort="false"
              id="SupplementalLoadingRate"
              label="displaykey.Web.Policy.WC.CovEmp.SupplementalLoadingRate"
              numCols="12"
              required="true"
              value="wcEmployee.SupplementalLoadingRate"
              valueVisible="wcEmployee.SupplementalDiseaseLoaded"
              visible="gw.pcf.WC7ClassesInputSetUIHelper.isSupplementalLoadingRateColumnVisible(jurisdiction)"
              wrapLabel="true"/>
            <DateCell
              dateFormat="short"
              id="effectiveDate"
              label="displaykey.Web.Policy.WC7.CovEmp.effectiveDate"
              required="true"
              value="wcEmployee.EffectiveDate"
              visible="true"/>
            <DateCell
              dateFormat="short"
              id="expirationDate"
              label="displaykey.Web.Policy.WC7.CovEmp.expirationDate"
              required="true"
              value="wcEmployee.ExpirationDate"
              visible="true"/>
          </Row>
          <RowIterator
            editable="true"
            elementName="wcCoveredEmployee"
            id="CoveredEmployee"
            pageSize="0"
            value="wcEmployee.AdditionalVersions.whereTypeIs(WC7CoveredEmployee)">
            <Variable
              initialValue="isNewTerm ? null : wcCoveredEmployee.BasedOn.ClassCode"
              name="addlVersionPreviousWC7ClassCode"/>
            <Variable
              initialValue="gw.pcf.WC7ClassesInputSetUIHelper.getClassCodeShortDescriptions(wcCoveredEmployee, wcCoveredEmployee.LocationWM, addlVersionPreviousWC7ClassCode)"
              name="addlVersionClassCodeShortDescs"
              recalculateOnRefresh="true"/>
            <Row>
              <Cell
                enableSort="false"
                id="Period2"
                value="gw.pcf.WC7ClassesInputSetUIHelper.getPeriodNumbers(wcCoveredEmployee, splitDates)"
                visible="splitDates.Count &gt; 2"/>
              <RangeCell
                align="left"
                id="WC7SpecialCoverage"
                required="true"
                value="wcCoveredEmployee.GoverningLaw"
                valueRange="jurisdiction.getPossibleGoverningLaws()"
                width="200">
                <PostOnChange
                  onChange="wcEmployee.ClassCode = gw.pcf.WC7ClassesInputSetUIHelper.findFirstMatchingClassCode(wcEmployee.ClassCode.Code, wcEmployee, previousWC7ClassCode)"/>
              </RangeCell>
              <RangeCell
                align="left"
                id="Loc"
                required="true"
                sortOrder="1"
                value="wcCoveredEmployee.LocationWM"
                valueRange="wc7Line.Branch.getPolicyLocationWM(gw.api.util.StateJurisdictionMappingUtil.getStateMappingForJurisdiction(jurisdiction.Jurisdiction))"
                width="150"/>
              <PickerCell
                id="ClassCode"
                inputConversion="gw.pcf.WC7ClassesInputSetUIHelper.findFirstMatchingClassCode(VALUE, wcCoveredEmployee, addlVersionPreviousWC7ClassCode)"
                numCols="6"
                outputConversion="VALUE == null ? &quot;&quot; : VALUE.Code"
                pickLocation="WC7ClassCodeSearchPopup.push(wcCoveredEmployee.LocationWM, wc7Line, addlVersionPreviousWC7ClassCode, gw.pcf.WC7ClassesInputSetUIHelper.getExcludedClassCodeTypes(wcEmployee.GoverningLaw))"
                required="true"
                sortOrder="2"
                value="wcCoveredEmployee.ClassCode">
                <Reflect
                  available="VALUE.State != null"
                  triggerIds="Loc"/>
                <PostOnChange
                  onChange="if (wcCoveredEmployee.ClassCode == null) addlVersionClassCodeShortDescs = {}"/>
              </PickerCell>
              <RangeCell
                align="left"
                id="Description"
                required="true"
                value="wcCoveredEmployee.ClassCodeShortDescription"
                valueRange="addlVersionClassCodeShortDescs"
                width="250"/>
              <TextCell
                align="right"
                editable="true"
                id="NumEmployees"
                numCols="8"
                value="wcCoveredEmployee.NumEmployees"/>
              <CheckBoxCell
                editable="true"
                id="IfAnyExposure"
                value="wcCoveredEmployee.IfAnyExposureAndClearBasisAmount">
                <PostOnChange/>
              </CheckBoxCell>
              <TextCell
                align="right"
                available="!wcCoveredEmployee.IfAnyExposureAndClearBasisAmount"
                editable="true"
                id="AnnualRenum"
                numCols="8"
                required="true"
                validationLabel="displaykey.Web.Policy.WC.CovEmp.AnnualRenum"
                value="wcCoveredEmployee.BasisAmount"
                valueVisible="!wcCoveredEmployee.IfAnyExposureAndClearBasisAmount"/>
              <TextCell
                align="right"
                available="!wcCoveredEmployee.IfAnyExposureAndClearBasisAmount"
                id="BasisType"
                numCols="8"
                required="true"
                validationLabel="displaykey.Web.Policy.WC.CovEmp.BasisType"
                value="wcCoveredEmployee.ClassCodeBasisDescription"
                valueVisible="!wcCoveredEmployee.IfAnyExposureAndClearBasisAmount"/>
              <TextCell
                align="right"
                id="Rate"
                numCols="8"
                required="true"
                value="wcCoveredEmployee.Rate"
                valueVisible="wcEmployee.ClassCode.ARatedType"
                visible="gw.pcf.WC7ClassesInputSetUIHelper.isRateColumnVisible(jurisdiction)"/>
              <CheckBoxCell
                id="SpecificDiseaseLoaded"
                value="wcCoveredEmployee.SpecificDiseaseLoaded"
                valueVisible="wcCoveredEmployee.ClassCode.DiseaseType"
                visible="gw.pcf.WC7ClassesInputSetUIHelper.isSpecificDiseaseColumnVisible(jurisdiction)"/>
              <CheckBoxCell
                id="SupplementalDiseaseLoaded"
                value="wcCoveredEmployee.SupplementalDiseaseLoaded"/>
              <TextCell
                align="right"
                id="supplementalDiseaseLoadingRate"
                numCols="12"
                required="true"
                value="wcCoveredEmployee.SupplementalLoadingRate"
                valueVisible="wcEmployee.SupplementalDiseaseLoaded"
                visible="gw.pcf.WC7ClassesInputSetUIHelper.isSupplementalLoadingRateColumnVisible(jurisdiction)"/>
              <DateCell
                dateFormat="short"
                id="effectiveDate"
                required="true"
                value="wcCoveredEmployee.EffectiveDate"
                visible="true"/>
              <DateCell
                dateFormat="short"
                id="expirationDate"
                required="true"
                value="wcCoveredEmployee.ExpirationDate"
                visible="true"/>
            </Row>
          </RowIterator>
        </RowIterator>
      </ListViewPanel>
    </ListViewInput>
  </InputSet>
</PCF>
<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <InputSet
    id="CoverageInputSet"
    mode="WC7LaborContractorExclEndorsementExcl">
    <Require
      name="exclusionPattern"
      type="gw.api.productmodel.ClausePattern"/>
    <Require
      name="coverable"
      type="Coverable"/>
    <Require
      name="openForEdit"
      type="boolean"/>
    <Variable
      initialValue="coverable.PolicyLine as WC7Line"
      name="theWC7Line"
      type="WC7WorkersCompLine"/>
    <Variable
      initialValue="gw.plugin.Plugins.get(gw.plugin.contact.IContactConfigPlugin)"
      name="contactConfigPlugin"/>
    <HiddenInput
      id="ExclPatternDisplayName"
      value="exclusionPattern.DisplayName"/>
    <InputGroup
      allowToggle="exclusionPattern.allowToggle(coverable)"
      childrenVisible="coverable.getCoverageConditionOrExclusion(exclusionPattern) != null"
      id="ExclusionInputGroup"
      label="exclusionPattern.DisplayName"
      onToggle="new gw.pcf.WC7CoverageInputSetUIHelper().toggleClause(theWC7Line, exclusionPattern, VALUE)">
      <ListViewInput
        editable="true"
        id="WC7PolicyLaborContractorsLV"
        labelAbove="true"
        visible="true">
        <Toolbar>
          <AddButton
            hideIfReadOnly="true"
            id="AddWC7PolicyLaborContractor"
            iterator="WC7PolicyLaborContractorDetailsLV"
            label="displaykey.Web.Generic.Add"
            visible="true">
            <AddMenuItemIterator
              elementName="contactType"
              value="contactConfigPlugin.getAllowedContactTypesForPolicyContactRoleType(typekey.PolicyContactRole.TC_POLICYLABORCONTRACTOR)">
              <IteratorSort
                sortBy="contactType.DisplayName"
                sortOrder="1"/>
              <AddMenuItem
                id="ContactType"
                iterator="WC7PolicyLaborContractorDetailsLV"
                label="displaykey.Web.Contact.AddNewOfType(contactType)"
                pickLocation="WC7NewLaborContractorForContactTypePopup.push(theWC7Line.Branch.WC7Line, contactType, exclusionPattern)"/>
            </AddMenuItemIterator>
            <AddMenuItem
              conversionExpression="addNewLaborContractorDetailForContact(PickedValue)"
              id="AddFromSearch"
              iterator="WC7PolicyLaborContractorDetailsLV"
              label="displaykey.Web.Policy.Contact.FromAddressBook"
              pickLocation="ContactSearchPopup.push(&quot;LaborContractor&quot;)"/>
            <AddMenuItem
              hideIfReadOnly="true"
              id="AddExistingContact"
              iterator="WC7PolicyLaborContractorDetailsLV"
              label="displaykey.Web.Policy.Contact.Existing(WC7PolicyLaborContractor.Type.TypeInfo.DisplayName)">
              <AddMenuItemIterator
                elementName="acctContact"
                value="theWC7Line.WC7PolicyLaborContractorDetailExistingCandidates">
                <IteratorSort
                  sortBy="acctContact.DisplayName"
                  sortOrder="1"/>
                <AddMenuItem
                  id="AccountContact"
                  iterator="WC7PolicyLaborContractorDetailsLV"
                  label="acctContact"
                  toCreateAndAdd="addNewLaborContractorDetailForContact(acctContact.Contact)"/>
              </AddMenuItemIterator>
            </AddMenuItem>
            <AddMenuItem
              hideIfReadOnly="true"
              id="AddOtherContact"
              iterator="WC7PolicyLaborContractorDetailsLV"
              label="displaykey.Web.Policy.Contact.OtherContacts">
              <AddMenuItemIterator
                elementName="acctContact"
                value="theWC7Line.WC7PolicyLaborContractorDetailOtherCandidates">
                <IteratorSort
                  sortBy="acctContact.DisplayName"
                  sortOrder="1"/>
                <AddMenuItem
                  id="AccountContact"
                  iterator="WC7PolicyLaborContractorDetailsLV"
                  label="acctContact"
                  toCreateAndAdd="addNewLaborContractorDetailForContact(acctContact.Contact)"/>
              </AddMenuItemIterator>
            </AddMenuItem>
          </AddButton>
          <IteratorButtons
            id="ANIIteratorButtons"
            iterator="WC7PolicyLaborContractorDetailsLV"/>
        </Toolbar>
        <ListViewPanel
          id="WC7PolicyLaborContractorDetailsLV">
          <RowIterator
            checkBoxVisible="true"
            editable="true"
            elementName="policyLaborContractorDetail"
            hasCheckBoxes="true"
            hideCheckBoxesIfReadOnly="true"
            toRemove="policyLaborContractorDetail.WC7LaborContact.removeDetail(policyLaborContractorDetail)"
            value="theWC7Line.getExcludedLaborContractorDetails(&quot;WC7LaborContractorExclEndorsementExcl&quot;)">
            <Row>
              <TextCell
                action="EditPolicyContactRolePopup.push(policyLaborContractorDetail.WC7LaborContact, openForEdit)"
                id="Name"
                label="displaykey.Web.Policy.WC.EmployeeLeasing.Receiver.SupplierName"
                numCols="20"
                required="true"
                value="policyLaborContractorDetail.WC7LaborContact"
                wrap="false"/>
              <RangeCell
                align="left"
                editable="true"
                id="State"
                label="displaykey.Web.Policy.WC.EmployeeLeasing.Receiver.State"
                required="true"
                value="policyLaborContractorDetail.Jurisdiction"
                valueRange="theWC7Line.WC7Jurisdictions.map(\j -&gt; j.Jurisdiction)"/>
              <DateCell
                editable="true"
                id="ContractEffectiveDate"
                label="displaykey.Web.PolicyLine.LeasedEmployee.ContractEffectiveDate"
                required="true"
                value="policyLaborContractorDetail.ContractEffectiveDate"
                wrap="false"/>
              <DateCell
                editable="true"
                id="ContractExpirationDate"
                label="displaykey.Web.PolicyLine.LeasedEmployee.ContractExpirationDate"
                required="true"
                value="policyLaborContractorDetail.ContractExpirationDate"
                wrap="false"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
    </InputGroup>
    <InputDivider
      visible="openForEdit or coverable.getCoverageConditionOrExclusion(exclusionPattern) != null"/>
    <Code><![CDATA[function addNewLaborContractorDetailForContact(aContact : entity.Contact) : WC7LaborContactDetail {
  var newLaborContractor = theWC7Line.addExcludedLaborContractorDetailForContact(aContact, theWC7Line.WC7LaborContractorExclEndorsementExcl)
  return newLaborContractor
}]]></Code>
  </InputSet>
</PCF>
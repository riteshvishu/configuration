<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <InputSet
    id="CoverageInputSet"
    mode="WC7FederalEmployersLiabilityActACov">
    <Require
      name="coveragePattern"
      type="gw.api.productmodel.ClausePattern"/>
    <Require
      name="coverable"
      type="Coverable"/>
    <Require
      name="openForEdit"
      type="boolean"/>
    <Variable
      initialValue="(coverable as WC7WorkersCompLine)"
      name="wc7Line"/>
    <Variable
      initialValue="wc7Line.Branch.Job.NewTerm"
      name="isNewTerm"/>
    <Variable
      initialValue="wc7Line.getVersionList().AllVersions.first().getSlice(wc7Line.Branch.PeriodStart)"
      name="wc7LineAtPeriodStart"
      type="entity.WC7WorkersCompLine"/>
    <Variable
      initialValue="new gw.pcf.WC7CoverageInputSetUIHelper()"
      name="coverageInputSetHelper"/>
    <HiddenInput
      id="CovPatternDisplayName"
      value="coveragePattern.DisplayName"/>
    <InputGroup
      allowToggle="coveragePattern.allowToggle(coverable)"
      childrenVisible="coverable.getCoverageConditionOrExclusion(coveragePattern) != null"
      confirmMessage="displaykey.Web.Policy.WC7.Confirm.RemovingFELAMaritimeCovRemovesExposures(coveragePattern)"
      id="CovPatternInputGroup"
      label="coveragePattern.DisplayName"
      onToggle="wc7Line.setFELACovExists(VALUE)"
      showConfirmMessage="wc7Line.WC7FederalEmployersLiabilityActACovExists and wc7Line.WC7FedCoveredEmployeesWM.HasElements">
      <CovTermOptionInput
        editable="gw.web.productmodel.ChoiceCovTermUtil.isEditable(wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabLimitTerm) and wc7LineAtPeriodStart.isLineCoverageTermEditable(wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabLimitTerm)"
        id="WC7FedEmpLiabLimitTermInput"
        label="wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabLimitTerm.DisplayName"
        required="wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabLimitTerm.Pattern.Required"
        value="wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabLimitTerm"/>
      <CovTermOptionInput
        editable="gw.web.productmodel.ChoiceCovTermUtil.isEditable(wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabAggLimitTerm) and wc7LineAtPeriodStart.isLineCoverageTermEditable(wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabAggLimitTerm)"
        id="WC7FedEmpLiabAggLimitTermInput"
        label="wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabAggLimitTerm.DisplayName"
        required="wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabAggLimitTerm.Pattern.Required"
        value="wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabAggLimitTerm"/>
      <CovTermTypekeyInput
        editable="gw.web.productmodel.ChoiceCovTermUtil.isEditable(wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabProgramTerm) and wc7LineAtPeriodStart.WC7FedCoveredEmployeeVLs.Empty and wc7LineAtPeriodStart.isLineCoverageTermEditable(wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabProgramTerm)"
        id="WC7FedEmpLiabProgramTermInput"
        label="wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabProgramTerm.DisplayName"
        required="wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabProgramTerm.Pattern.Required"
        value="wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabProgramTerm">
        <PostOnChange/>
      </CovTermTypekeyInput>
      <CovTermTypekeyInput
        editable="gw.web.productmodel.ChoiceCovTermUtil.isEditable(wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabLawTerm) and wc7LineAtPeriodStart.WC7FedCoveredEmployeeVLs.Empty and wc7LineAtPeriodStart.isLineCoverageTermEditable(wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabLawTerm)"
        id="WC7FedEmpLiabLawTermInput"
        label="wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabLawTerm.DisplayName"
        required="wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabLawTerm.Pattern.Required"
        value="wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabLawTerm"
        visible="wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.HasWC7FedEmpLiabProgramTerm and wc7LineAtPeriodStart.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabProgramTerm.Value == typekey.WC7CovProgramType.TC_PROGRAMII"/>
      <ListViewInput
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            iterator="WC7FedCovEmployee"/>
        </Toolbar>
        <ListViewPanel
          id="WC7FedCovEmpLV">
          <Variable
            initialValue="gw.pcf.WC7ClassesInputSetUIHelper.deriveClassCodeProgramType(wc7Line.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabProgramTerm.Value, wc7Line.WC7FederalEmployersLiabilityActACov.WC7FedEmpLiabLawTerm.Value)"
            name="classCodeProgramType"
            recalculateOnRefresh="true"/>
          <RowIterator
            autoAdd="false"
            editable="true"
            elementName="wc7FedCovEmp"
            hasCheckBoxes="true"
            hideCheckBoxesIfReadOnly="true"
            id="WC7FedCovEmployee"
            numEntriesRequired="0"
            numEntriesToAdd="1"
            toCreateAndAdd="wc7Line.createAndAddFedCoveredEmployeeWM()"
            toRemove="wc7FedCovEmp.removeWM()"
            type="WC7FedCoveredEmployee"
            validationLabel="displaykey.Web.Policy.WC.CovEmp"
            value="wc7Line.WC7FedCoveredEmployeesWM">
            <Variable
              initialValue="isNewTerm ? null : wc7FedCovEmp.BasedOn.ClassCode"
              name="previousWC7ClassCode"
              type="WC7ClassCode"/>
            <Variable
              initialValue="gw.pcf.WC7ClassesInputSetUIHelper.getClassCodeShortDescriptionsForLineCoverage(wc7FedCovEmp, wc7FedCovEmp.LocationWM, previousWC7ClassCode)"
              name="classCodeShortDescriptions"
              recalculateOnRefresh="true"/>
            <Row>
              <RangeCell
                align="left"
                editable="wc7FedCovEmp.CanEditLocation"
                id="Loc"
                label="displaykey.Web.Policy.WC.CovEmp.Loc"
                required="true"
                sortOrder="1"
                value="wc7FedCovEmp.LocationWM"
                valueRange="wc7Line.Branch.PolicyLocationsWM">
                <PostOnChange
                  onChange="wc7FedCovEmp.ClassCode = gw.pcf.WC7ClassesInputSetUIHelper.findFirstMatchingClassCodeFedEmp(wc7FedCovEmp.ClassCode.Code, wc7FedCovEmp, wc7Line.WC7FederalEmployersLiabilityActACov, previousWC7ClassCode)"/>
              </RangeCell>
              <TextCell
                id="Jurisdiction"
                label="displaykey.Web.Policy.WC7.ClassCode.Jurisdiction"
                numCols="8"
                required="true"
                value="wc7FedCovEmp.LocationWM.State"/>
              <PickerCell
                editable="wc7FedCovEmp.LocationWM.State != null"
                id="ClassCode"
                inputConversion="gw.pcf.WC7ClassesInputSetUIHelper.findFirstMatchingClassCodeFedEmp(VALUE, wc7FedCovEmp, wc7Line.WC7FederalEmployersLiabilityActACov, previousWC7ClassCode)"
                label="displaykey.Web.Policy.WC.CovEmp.ClassCode"
                numCols="6"
                onPick="coverageInputSetHelper.clearupWC7FedEmployeeRates(wc7FedCovEmp)"
                outputConversion="VALUE == null ? &quot;&quot; : (VALUE).Code"
                pickLocation="WC7ClassCodeSearchPopup.push(wc7FedCovEmp.LocationWM, wc7Line, previousWC7ClassCode, WC7ClassCodeType.TC_FELA, classCodeProgramType)"
                required="true"
                sortOrder="2"
                value="wc7FedCovEmp.ClassCode">
                <PostOnChange
                  onChange="coverageInputSetHelper.clearupWC7FedEmployeeRates(wc7FedCovEmp); if (wc7FedCovEmp.ClassCode == null) classCodeShortDescriptions = {}"/>
              </PickerCell>
              <RangeCell
                align="left"
                editable="classCodeShortDescriptions.length &gt; 1"
                id="Description"
                label="displaykey.Web.Policy.WC.CovEmp.Description"
                required="true"
                value="wc7FedCovEmp.ClassCodeShortDescription"
                valueRange="classCodeShortDescriptions"
                width="250"/>
              <TextCell
                align="right"
                editable="true"
                id="NumEmployees"
                label="displaykey.Web.Policy.WC.CovEmp.NumEmployees"
                numCols="8"
                value="wc7FedCovEmp.NumEmployees"/>
              <CheckBoxCell
                editable="true"
                id="IfAnyExposure"
                label="displaykey.Web.Policy.WC.CovEmp.IfAnyExposure"
                value="wc7FedCovEmp.IfAnyExposureAndClearBasisAmount">
                <PostOnChange/>
              </CheckBoxCell>
              <TextCell
                align="right"
                available="!wc7FedCovEmp.IfAnyExposureAndClearBasisAmount"
                editable="true"
                enableSort="false"
                id="AnnualRenum"
                label="displaykey.Web.Policy.WC.CovEmp.AnnualRenum"
                numCols="8"
                required="true"
                value="wc7FedCovEmp.BasisAmount"
                valueVisible="!wc7FedCovEmp.IfAnyExposureAndClearBasisAmount"/>
              <TextCell
                align="right"
                available="!wc7FedCovEmp.IfAnyExposureAndClearBasisAmount"
                enableSort="false"
                id="BasisType"
                label="displaykey.Web.Policy.WC.CovEmp.BasisType"
                numCols="8"
                required="true"
                value="wc7FedCovEmp.ClassCodeBasisDescription"
                valueVisible="!wc7FedCovEmp.IfAnyExposureAndClearBasisAmount"/>
              <TextCell
                editable="true"
                id="Rate"
                label="displaykey.Web.Policy.WC.CovEmp.Rate"
                numCols="8"
                required="true"
                value="wc7FedCovEmp.Rate"
                valueVisible="wc7FedCovEmp.ClassCode.ARatedType"
                visible="coverageInputSetHelper.isFedCovEmpRateColumnVisible(wc7Line)">
                <PostOnChange/>
              </TextCell>
              <CheckBoxCell
                editable="true"
                enableSort="false"
                id="SpecificDiseaseLoaded"
                label="displaykey.Web.Policy.WC.CovEmp.SpecificDiseaseLoaded"
                value="wc7FedCovEmp.SpecificDiseaseLoaded"
                valueVisible="wc7FedCovEmp.ClassCode.DiseaseType"
                visible="coverageInputSetHelper.isFedCovEmpSpecificDiseaseColumnVisible(wc7Line)"
                wrapLabel="true"/>
              <CheckBoxCell
                editable="true"
                enableSort="false"
                id="SupplementalDiseaseLoaded"
                label="displaykey.Web.Policy.WC.CovEmp.SupplementalDiseaseLoaded"
                value="wc7FedCovEmp.SupplementalDiseaseLoaded"
                wrapLabel="true">
                <PostOnChange
                  onChange="wc7FedCovEmp.SupplementalDiseaseLoadingRate = null"/>
              </CheckBoxCell>
              <TextCell
                editable="true"
                enableSort="false"
                id="SupplementalLoadingRate"
                label="displaykey.Web.Policy.WC.CovEmp.SupplementalLoadingRate"
                numCols="8"
                required="true"
                value="wc7FedCovEmp.SupplementalLoadingRate"
                valueVisible="wc7FedCovEmp.SupplementalDiseaseLoaded"
                visible="coverageInputSetHelper.isFedCovEmpSupplementalLoadingRateColumnVisible(wc7Line)"
                wrapLabel="true"/>
              <DateCell
                dateFormat="short"
                id="EffectiveDate"
                label="displaykey.Web.Policy.WC7.CovEmp.effectiveDate"
                required="true"
                value="wc7FedCovEmp.EffectiveDate"
                visible="true"/>
              <DateCell
                dateFormat="short"
                id="ExpirationDate"
                label="displaykey.Web.Policy.WC7.CovEmp.expirationDate"
                required="true"
                value="wc7FedCovEmp.ExpirationDate"
                visible="true"/>
            </Row>
            <RowIterator
              editable="true"
              elementName="wc7FedCovEmp2"
              id="WC7FedCovEmployee2"
              pageSize="0"
              value="wc7FedCovEmp.AdditionalVersions.whereTypeIs(WC7FedCoveredEmployee)">
              <Variable
                initialValue="isNewTerm ? null : wc7FedCovEmp2.BasedOn.ClassCode"
                name="addlVersionPreviousWC7ClassCode"/>
              <Variable
                initialValue="gw.pcf.WC7ClassesInputSetUIHelper.getClassCodeShortDescriptions(wc7FedCovEmp2, wc7FedCovEmp2.LocationWM, addlVersionPreviousWC7ClassCode)"
                name="addlVersionClassCodeShortDescs"
                recalculateOnRefresh="true"/>
              <Row>
                <RangeCell
                  align="left"
                  id="Loc"
                  required="true"
                  sortOrder="1"
                  value="wc7FedCovEmp2.LocationWM"
                  valueRange="wc7Line.Branch.PolicyLocationsWM"
                  width="150"/>
                <TextCell
                  id="Jurisdiction"
                  numCols="8"
                  required="true"
                  value="wc7FedCovEmp.LocationWM.State"/>
                <PickerCell
                  id="ClassCode"
                  inputConversion="gw.pcf.WC7ClassesInputSetUIHelper.findFirstMatchingClassCodeFedEmp(VALUE, wc7FedCovEmp2, wc7Line.WC7FederalEmployersLiabilityActACov, addlVersionPreviousWC7ClassCode)"
                  numCols="6"
                  outputConversion="VALUE == null ? &quot;&quot; : (VALUE).Code"
                  pickLocation="WC7ClassCodeSearchPopup.push(wc7FedCovEmp2.LocationWM, wc7Line, addlVersionPreviousWC7ClassCode, WC7ClassCodeType.TC_FELA, classCodeProgramType)"
                  required="true"
                  sortOrder="2"
                  value="wc7FedCovEmp2.ClassCode">
                  <PostOnChange
                    onChange="if (wc7FedCovEmp2.ClassCode == null) classCodeShortDescriptions = {}"/>
                </PickerCell>
                <RangeCell
                  align="left"
                  editable="addlVersionClassCodeShortDescs.length &gt; 1"
                  id="Description"
                  required="true"
                  value="wc7FedCovEmp2.ClassCodeShortDescription"
                  valueRange="addlVersionClassCodeShortDescs"
                  width="250"/>
                <TextCell
                  align="right"
                  editable="true"
                  id="NumEmployees"
                  numCols="8"
                  value="wc7FedCovEmp2.NumEmployees"/>
                <CheckBoxCell
                  editable="true"
                  id="IfAnyExposure"
                  value="wc7FedCovEmp2.IfAnyExposureAndClearBasisAmount">
                  <PostOnChange/>
                </CheckBoxCell>
                <TextCell
                  align="right"
                  available="!wc7FedCovEmp2.IfAnyExposureAndClearBasisAmount"
                  editable="true"
                  id="AnnualRenum"
                  numCols="8"
                  required="true"
                  validationLabel="displaykey.Web.Policy.WC.CovEmp.AnnualRenum"
                  value="wc7FedCovEmp2.BasisAmount"
                  valueVisible="!wc7FedCovEmp2.IfAnyExposureAndClearBasisAmount"/>
                <TextCell
                  align="right"
                  available="!wc7FedCovEmp2.IfAnyExposureAndClearBasisAmount"
                  id="BasisType"
                  numCols="8"
                  required="true"
                  validationLabel="displaykey.Web.Policy.WC.CovEmp.BasisType"
                  value="wc7FedCovEmp2.ClassCodeBasisDescription"
                  valueVisible="!wc7FedCovEmp2.IfAnyExposureAndClearBasisAmount"/>
                <TextCell
                  align="right"
                  id="Rate"
                  numCols="8"
                  required="true"
                  value="wc7FedCovEmp2.Rate"
                  valueVisible="wc7FedCovEmp.ClassCode.ARatedType"
                  visible="coverageInputSetHelper.isFedCovEmpRateColumnVisible(wc7Line)">
                  <PostOnChange/>
                </TextCell>
                <CheckBoxCell
                  enableSort="false"
                  id="SpecificDiseaseLoaded"
                  value="wc7FedCovEmp2.SpecificDiseaseLoaded"
                  valueVisible="wc7FedCovEmp2.ClassCode.DiseaseType"
                  visible="coverageInputSetHelper.isFedCovEmpSpecificDiseaseColumnVisible(wc7Line)"
                  wrapLabel="true"/>
                <CheckBoxCell
                  enableSort="false"
                  id="SupplementalDiseaseLoaded"
                  value="wc7FedCovEmp2.SupplementalDiseaseLoaded"
                  wrapLabel="true">
                  <PostOnChange/>
                </CheckBoxCell>
                <TextCell
                  align="right"
                  enableSort="false"
                  id="supplementalDiseaseLoadingRate"
                  numCols="8"
                  required="true"
                  value="wc7FedCovEmp2.SupplementalLoadingRate"
                  valueVisible="wc7FedCovEmp.SupplementalDiseaseLoaded"
                  visible="coverageInputSetHelper.isFedCovEmpSupplementalLoadingRateColumnVisible(wc7Line)"
                  wrapLabel="true"/>
                <DateCell
                  dateFormat="short"
                  id="EffectiveDate"
                  required="true"
                  value="wc7FedCovEmp2.EffectiveDate"
                  visible="true"/>
                <DateCell
                  dateFormat="short"
                  id="ExpirationDate"
                  required="true"
                  value="wc7FedCovEmp2.ExpirationDate"
                  visible="true"/>
              </Row>
            </RowIterator>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
    </InputGroup>
    <InputDivider
      visible="openForEdit or coverable.getCoverageConditionOrExclusion(coveragePattern) != null"/>
  </InputSet>
</PCF>